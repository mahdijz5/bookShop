version: '3.8'
services:
 
    core-svc:
        container_name: core-svc
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
            args:
                - APP_NAME=core
        restart: unless-stopped
        ports:
            - 6004:6004
        networks:
            - net
        depends_on:
            - rabbitmq
            - mongodb-primary  
    
    ipg-svc:
        container_name: ipg-svc
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
            args:
                - APP_NAME=ipg
        restart: unless-stopped
        networks:
            - net
        depends_on:
            - rabbitmq
            - mongodb-primary 
  
    auth-svc:
        container_name: auth-svc
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
            args:
                - APP_NAME=auth
        restart: unless-stopped
        networks:
            - net
        depends_on:
            - rabbitmq
            - mongodb-primary 
    
    package-svc:
        container_name: package-svc
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
            args:
                - APP_NAME=package
        restart: unless-stopped
        networks:
            - net
        depends_on:
            - rabbitmq
            - mongodb-primary 
   
    mail-svc:
        container_name: mail-svc
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
            args:
                - APP_NAME=mail
        restart: unless-stopped
        networks:
            - net
        depends_on:
            - rabbitmq
            - mongodb-primary 

    mongodb-primary: 
        container_name : mongodb-primary
        ports:
            - "27017:27017"
        image: docker.io/bitnami/mongodb:7.0
        environment:
          - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
          - MONGODB_ROOT_PASSWORD=password123
        #   - MONGODB_REPLICA_SET_MODE=primary
        #   - MONGODB_REPLICA_SET_KEY=replicasetkey123
        volumes:
          - 'mongo_vol:/bitnami/mongodb'
        networks: 
            - net

    # mongodb-secondary:
    #     image: docker.io/bitnami/mongodb:7.0
    #     depends_on:
    #       - mongodb-primary
    #     environment:
    #       - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
    #     #   - MONGODB_REPLICA_SET_MODE=secondary
    #       - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
    #       - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
    #     #   - MONGODB_REPLICA_SET_KEY=replicasetkey123
    #     networks: 
    #         - net
            
     

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        hostname: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./data/rabbitmq_data:/var/lib/rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        env_file:
            - .env
        networks:
            - net

    redis:
        image: bitnami/redis:7.0
        container_name: redis
        hostname: redis
        ports:
            - 6379:6379
        environment:
            ALLOW_EMPTY_PASSWORD: yes
            REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
        env_file:
            - .env
        networks:
            - net

    # mongo-express:
    #     image: mongo-express
    #     container_name: mongo-express
    #     hostname: mongo-express
    #     ports:
    #         - 47004:8081
    #     env_file:
    #         - .env
    #     networks:
    #         - net

networks:
    net:
        driver: bridge
        attachable: true
volumes:
    mongo_vol:
        driver: local
